@startuml
package model{
    package game{
        class GameContext  << (S,#FF7700) Singleton >> {
            games: ArrayList<Game>
            __
            get()
            getGame(): Game
        }

        GameContext "1...n" *-- Game

        class Game{
            numberPlayers: int
            board: Board
            players: ArrayList<Player>
            currentPlayer: Player
            done: boolean
            finalFrenzy: boolean
            turn: int
            __
            setGame(int, int, List<Player>): void
        }

        Game "1" *-- Board

        class Board{

        }
    }
    package chat{
            class Manager  << (S,#FF7700) Singleton >> {
            }
    }
}

package controller{
    class GameController  << (S,#FF7700) Singleton >> implements MoveRequestHandler {
        instance: GameController
        __
        possibleMoves(Player, int): Update
        setSpawn(Player, int, int): void
        getFirstTimeSpawn(Player, int): Update
    }
    interface MoveRequestHandler{
        handle(int, Movement):void
        handle(int, Movement):void
        handle(int, DamageEffect):void
        handle(int, Grab):void
        handle(int, Run):void
        handle(int, MoveAndGrab):void
    }
}
@enduml