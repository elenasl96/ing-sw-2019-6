@startuml
class Weapon{
    List<Effect> Effects
}

enum EffectType{
    Basic
    Optional
    Alternative
    BeforeAfterBasic
}
interface Move{
__
void execute()
}
abstract Effect{
    effectType: EffectType
    target: Target
    optionality: Boolean
    optionalTarget: Boolean
    cascade: Boolean
    __
    void askForInput()
}

class DamageEffect{
    damages: int
}
class MarkEffect{
    marks: int
}
class MovementEffect{
    Square Destination
    movement: Movement
}

Move <..Effect
EffectType -> Effect
Weapon "1...n" *-- Effect
Effect <.. DamageEffect
Effect <.. MovementEffect
Effect <.. MarkEffect


abstract Target{
    canSee: Boolean
    cardinal: Boolean
    minDistance: int
    maxDistance: int
}

Target <.. Player
Target <.. Square
Target <.. Room

Effect "1...n" *-- Target
@enduml